/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (-0.5    AR       0)    // 0
    (0.5     AR       0)    // 1
    (-0.5    0        0)    // 2
    (0.5     0        0)    // 3
    (5       0        0)    // 4
    (-0.5    1        0)    // 5
    (0.5     1        0)    // 6
    (5       1        0)    // 7
    (-0.5    AR       0.1)  // 8
    (0.5     AR       0.1)  // 9
    (-0.5    0        0.1)  // 10
    (0.5     0        0.1)  // 11
    (5       0        0.1)  // 12
    (-0.5    1        0.1)  // 13
    (0.5     1        0.1)  // 14
    (5       1        0.1)  // 15
    (-5      0        0)    // 16
    (-5      1        0)    // 17
    (-5      0        0.1)  // 18
    (-5      1        0.1)  // 19

);

blocks
(
    hex (0 1 3 2 8 9 11 10)     (XMESH YMESH 1) simpleGrading (1           1 1) // little cavity
    hex (2 3 6 5 10 11 14 13)   (XMESH  MESH 1) simpleGrading (1           1 1) // connection
    hex (3 4 7 6 11 12 15 14)   ( MESH  MESH 1) simpleGrading (GRADING     1 1) // right channel
    hex (16 2 5 17 18 10 13 19) ( MESH  MESH 1) simpleGrading (INV_GRADING 1 1) // left channel
);

edges
(
);

boundary
(
    lid
    {
        type wall;
        faces
        (
            (5 13 14 6)
            (6 14 15 7)
            (17 19 13 5)
        );
    }
    fixedWalls
    {
        type wall;
        faces
        (
            (0 8 10 2)
            (4 12 11 3)
            (3 11 9 1)
            (1 9 8 0)
            (2 10 18 16)
        );
    }

    inlet
    {
        type patch;
        faces
        (
            (16 18 19 17)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (7 15 12 4)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (0 2 3 1)
            (2 5 6 3)
            (3 6 7 4)
            (8 9 11 10)
            (10 11 14 13)
            (11 12 15 14)
            (18 10 13 19)
            (16 17 5 2)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
